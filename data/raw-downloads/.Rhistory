pullYear = 2008; pullSpan = 1; pullState = "Illinois"; pullSt = "IL"; pullCounties = myCounties; pullTables = myTables; dirMetaFiles = dirSave; dirDl = dirDl; downloadData = TRUE # myTables
print(paste0("Downloading and extracting ACS ", pullYear, " ", pullSpan, " year data for ", "state =  ", pullState, " and Counties = ", paste(pullCounties, collapse = ", ")))
CountyLookup <- geo.lookup(state=pullSt, county=pullCounties)
pullCountyCodes <- CountyLookup$county[!is.na(CountyLookup$county)]
#----------------------------
### Download and Extract Data
#----------------------------
# Get metadata
if        (pullYear >= 2010) {
metaPath   <- paste0("acs", pullYear, "_", pullSpan, "yr/summaryfile/Sequence_Number_and_Table_Number_Lookup.txt")
remoteData <- paste0("acs", pullYear, "_", pullSpan, "yr/summaryfile/", pullYear, "_ACSSF_By_State_All_Tables/", pullState, "_All_Geographies.zip")
geoFileExt <- "csv"
} else if (pullYear == 2009) {
metaPath   <- paste0("acs", pullYear, "_", pullSpan, "yr/summaryfile/UserTools/merge_5_6.txt")
remoteData <- paste0("acs", pullYear, "_", pullSpan, "yr/summaryfile/Entire_States/Illinois.zip")
geoFileExt <- "txt"
} else if (pullYear == 2008) {
metaPath   <- paste0("acs", pullYear, "_", pullSpan, "yr/summaryfile/merge_5_6.xls")
remoteData <- paste0("acs", pullYear, "_", pullSpan, "yr/summaryfile/Illinois/all_il.zip")
geoFileExt <- "txt"
} else if (pullYear == 2007) {
metaPath   <- paste0("acs", pullYear, "_", pullSpan, "yr/summaryfile/merge_5_6_final.xls")
remoteData <- paste0("acs", pullYear, "_", pullSpan, "yr/summaryfile/Illinois/all_il.zip")
geoFileExt <- "txt"
} else if (pullYear == 2006) {
metaPath   <- paste0("acs", pullYear, "/summaryfile/merge_5_6_final.xls")
remoteData <- paste0("acs", pullYear, "/summaryfile/Illinois/il_all_2006.zip")
geoFileExt <- "txt"
}
#--------------#
# Get metadata #
#--------------#
myMetaFileName <- paste0("MetaFile_ACS_", pullYear, "_", pullSpan, "Year.csv")
if (file.exists(paste0(dirMetaFiles, myMetaFileName))) {
Meta <- read.csv(paste0(dirMetaFiles, myMetaFileName), header = T)
} else {
metaExt <- substr(metaPath, nchar(metaPath) - 2, nchar(metaPath))
if (metaExt == "txt") {
Meta <- read.csv(url(paste0("http://www2.census.gov/", metaPath)), header = TRUE)
} else if (metaExt == "xls") {
Meta <- read.xls(paste0("http://www2.census.gov/", metaPath))
}
colnames(Meta) <- c("File.ID", "Table.ID", "Sequence.Number", "Line.Number", "Start.Position", "Total.Cells.in.Table", "Total.Cells.in.Sequence", "Table.Title", "Subject.Area")
write.csv(Meta, paste0(dirMetaFiles, myMetaFileName))
}
#-------------#
# Get geodata #
#-------------#
geoLabels <- read.csv(paste0(dirMetaFiles, "/geofile-fields.csv"), header=T)
# created by hand from documentation
if (pullYear >= 2010) {
geoFile <- read.csv(paste0(dirDl, "g", pullYear, pullSpan, tolower(pullSt), ".csv"), header=F)
colnames(geoFile) <- geoLabels$geoField
} else {
geoFields <- read.csv(paste0(dirMetaFiles, "/geofile-fields-", pullYear, ".csv"), header=T)
geoFile <- read.fwf(file = paste0(dirDl, "g", pullYear, pullSpan, tolower(pullSt), ".", geoFileExt),
widths = geoFields$Widths,
col.names = geoFields$Col.Names)
}
geoFile <- read.fwf(file = paste0(dirDl, "g", pullYear, pullSpan, tolower(pullSt), ".", geoFileExt),
widths = geoFields$Widths,
col.names = geoFields$Col.Names)
geoFields <- read.csv(paste0(dirMetaFiles, "/geofile-fields-", pullYear, ".csv"), header=T)
### Set Up Workspace
rm(list=ls())
"%&%" <- function(...){ paste(..., sep="")}
library(acs) # This package isn't (yet) used directly to download ACS data, since it generates pulls using the Census API, and
#   only a subset of Census data sets are available through the API. However, it has some useful helper functions to
#   find codes for tables and geographies
library(gdata)
try(setwd("/home/nick/GitHub/acs-shop-cook-serve"), silent = T)
try(setwd("C:/Users/nmader/Documents/GitHub/acs-shop-cook-serve"), silent = T)
dirRoot <- getwd()
dirScripts <- dirRoot %&% "/scripts/"
dirDl      <- dirRoot %&% "/data/raw-downloads/"
dirSave    <- dirRoot %&% "/data/prepped-data/"
setwd(dirDl)
#########################################################################
#
# DOWNLOAD, EXTRACT, AND SELECT DATA FOR CUSTOM DATA SETS AND GEOGRAPHIES
# Developed by Chapin Hall
# Authors: Nick Mader (nmader@chapinhall.org), ...
#
#########################################################################
getAcs <- function(pullYear, pullSpan, pullState, pullSt, pullCounties, pullTables, dirMetaFiles, dirDl, downloadData) {
#Test code for if we want to run within this function
pullYear = 2008; pullSpan = 1; pullState = "Illinois"; pullSt = "IL"; pullCounties = myCounties; pullTables = myTables; dirMetaFiles = dirSave; dirDl = dirDl; downloadData = TRUE # myTables
print(paste0("Downloading and extracting ACS ", pullYear, " ", pullSpan, " year data for ", "state =  ", pullState, " and Counties = ", paste(pullCounties, collapse = ", ")))
CountyLookup <- geo.lookup(state=pullSt, county=pullCounties)
pullCountyCodes <- CountyLookup$county[!is.na(CountyLookup$county)]
#----------------------------
### Download and Extract Data
#----------------------------
# Get metadata
if        (pullYear >= 2010) {
metaPath   <- paste0("acs", pullYear, "_", pullSpan, "yr/summaryfile/Sequence_Number_and_Table_Number_Lookup.txt")
remoteData <- paste0("acs", pullYear, "_", pullSpan, "yr/summaryfile/", pullYear, "_ACSSF_By_State_All_Tables/", pullState, "_All_Geographies.zip")
geoFileExt <- "csv"
} else if (pullYear == 2009) {
metaPath   <- paste0("acs", pullYear, "_", pullSpan, "yr/summaryfile/UserTools/merge_5_6.txt")
remoteData <- paste0("acs", pullYear, "_", pullSpan, "yr/summaryfile/Entire_States/Illinois.zip")
geoFileExt <- "txt"
} else if (pullYear == 2008) {
metaPath   <- paste0("acs", pullYear, "_", pullSpan, "yr/summaryfile/merge_5_6.xls")
remoteData <- paste0("acs", pullYear, "_", pullSpan, "yr/summaryfile/Illinois/all_il.zip")
geoFileExt <- "txt"
} else if (pullYear == 2007) {
metaPath   <- paste0("acs", pullYear, "_", pullSpan, "yr/summaryfile/merge_5_6_final.xls")
remoteData <- paste0("acs", pullYear, "_", pullSpan, "yr/summaryfile/Illinois/all_il.zip")
geoFileExt <- "txt"
} else if (pullYear == 2006) {
metaPath   <- paste0("acs", pullYear, "/summaryfile/merge_5_6_final.xls")
remoteData <- paste0("acs", pullYear, "/summaryfile/Illinois/il_all_2006.zip")
geoFileExt <- "txt"
}
#--------------#
# Get metadata #
#--------------#
myMetaFileName <- paste0("MetaFile_ACS_", pullYear, "_", pullSpan, "Year.csv")
if (file.exists(paste0(dirMetaFiles, myMetaFileName))) {
Meta <- read.csv(paste0(dirMetaFiles, myMetaFileName), header = T)
} else {
metaExt <- substr(metaPath, nchar(metaPath) - 2, nchar(metaPath))
if (metaExt == "txt") {
Meta <- read.csv(url(paste0("http://www2.census.gov/", metaPath)), header = TRUE)
} else if (metaExt == "xls") {
Meta <- read.xls(paste0("http://www2.census.gov/", metaPath))
}
colnames(Meta) <- c("File.ID", "Table.ID", "Sequence.Number", "Line.Number", "Start.Position", "Total.Cells.in.Table", "Total.Cells.in.Sequence", "Table.Title", "Subject.Area")
write.csv(Meta, paste0(dirMetaFiles, myMetaFileName))
}
#-------------#
# Get geodata #
#-------------#
geoLabels <- read.csv(paste0(dirMetaFiles, "/geofile-fields.csv"), header=T)
# created by hand from documentation
if (pullYear >= 2010) {
geoFile <- read.csv(paste0(dirDl, "g", pullYear, pullSpan, tolower(pullSt), ".csv"), header=F)
colnames(geoFile) <- geoLabels$geoField
} else {
geoFields <- read.csv(paste0(dirMetaFiles, "/geofile-fields-", pullYear, ".csv"), header=T)
geoFile <- read.fwf(file = paste0(dirDl, "g", pullYear, pullSpan, tolower(pullSt), ".", geoFileExt),
widths = geoFields$Widths,
col.names = geoFields$Col.Names)
}
}
#Test code for if we want to run within this function
pullYear = 2008; pullSpan = 1; pullState = "Illinois"; pullSt = "IL"; pullCounties = myCounties; pullTables = myTables; dirMetaFiles = dirSave; dirDl = dirDl; downloadData = TRUE # myTables
print(paste0("Downloading and extracting ACS ", pullYear, " ", pullSpan, " year data for ", "state =  ", pullState, " and Counties = ", paste(pullCounties, collapse = ", ")))
CountyLookup <- geo.lookup(state=pullSt, county=pullCounties)
pullCountyCodes <- CountyLookup$county[!is.na(CountyLookup$county)]
#----------------------------
### Download and Extract Data
#----------------------------
# Get metadata
if        (pullYear >= 2010) {
metaPath   <- paste0("acs", pullYear, "_", pullSpan, "yr/summaryfile/Sequence_Number_and_Table_Number_Lookup.txt")
remoteData <- paste0("acs", pullYear, "_", pullSpan, "yr/summaryfile/", pullYear, "_ACSSF_By_State_All_Tables/", pullState, "_All_Geographies.zip")
geoFileExt <- "csv"
} else if (pullYear == 2009) {
metaPath   <- paste0("acs", pullYear, "_", pullSpan, "yr/summaryfile/UserTools/merge_5_6.txt")
remoteData <- paste0("acs", pullYear, "_", pullSpan, "yr/summaryfile/Entire_States/Illinois.zip")
geoFileExt <- "txt"
} else if (pullYear == 2008) {
metaPath   <- paste0("acs", pullYear, "_", pullSpan, "yr/summaryfile/merge_5_6.xls")
remoteData <- paste0("acs", pullYear, "_", pullSpan, "yr/summaryfile/Illinois/all_il.zip")
geoFileExt <- "txt"
} else if (pullYear == 2007) {
metaPath   <- paste0("acs", pullYear, "_", pullSpan, "yr/summaryfile/merge_5_6_final.xls")
remoteData <- paste0("acs", pullYear, "_", pullSpan, "yr/summaryfile/Illinois/all_il.zip")
geoFileExt <- "txt"
} else if (pullYear == 2006) {
metaPath   <- paste0("acs", pullYear, "/summaryfile/merge_5_6_final.xls")
remoteData <- paste0("acs", pullYear, "/summaryfile/Illinois/il_all_2006.zip")
geoFileExt <- "txt"
}
#--------------#
# Get metadata #
#--------------#
myMetaFileName <- paste0("MetaFile_ACS_", pullYear, "_", pullSpan, "Year.csv")
if (file.exists(paste0(dirMetaFiles, myMetaFileName))) {
Meta <- read.csv(paste0(dirMetaFiles, myMetaFileName), header = T)
} else {
metaExt <- substr(metaPath, nchar(metaPath) - 2, nchar(metaPath))
if (metaExt == "txt") {
Meta <- read.csv(url(paste0("http://www2.census.gov/", metaPath)), header = TRUE)
} else if (metaExt == "xls") {
Meta <- read.xls(paste0("http://www2.census.gov/", metaPath))
}
colnames(Meta) <- c("File.ID", "Table.ID", "Sequence.Number", "Line.Number", "Start.Position", "Total.Cells.in.Table", "Total.Cells.in.Sequence", "Table.Title", "Subject.Area")
write.csv(Meta, paste0(dirMetaFiles, myMetaFileName))
}
#-------------#
# Get geodata #
#-------------#
geoLabels <- read.csv(paste0(dirMetaFiles, "/geofile-fields.csv"), header=T)
# created by hand from documentation
if (pullYear >= 2010) {
geoFile <- read.csv(paste0(dirDl, "g", pullYear, pullSpan, tolower(pullSt), ".csv"), header=F)
colnames(geoFile) <- geoLabels$geoField
} else {
geoFields <- read.csv(paste0(dirMetaFiles, "/geofile-fields-", pullYear, ".csv"), header=T)
geoFile <- read.fwf(file = paste0(dirDl, "g", pullYear, pullSpan, tolower(pullSt), ".", geoFileExt),
widths = geoFields$Widths,
col.names = geoFields$Col.Names)
}
geoFields <- read.csv(paste0(dirMetaFiles, "/geofile-fields-", pullYear, ".csv"), header=T)
dirMetaFiles <- dirSave
geoFields <- read.csv(paste0(dirMetaFiles, "/geofile-fields-", pullYear, ".csv"), header=T)
geoFile <- read.fwf(file = paste0(dirDl, "g", pullYear, pullSpan, tolower(pullSt), ".", geoFileExt),
widths = geoFields$Widths,
col.names = geoFields$Col.Names)
View(geoFile)
View(geoFile[geoFile$NAME %in% "Chicago"])
View(geoFile[geoFile$NAME %in% "Chicago",])
geoFile[geoFile$NAME %in% "Chicago",]
geoFile
source('~/.active-rstudio-document', echo=TRUE)
?acs.lookup
acs.lookup(endyear = 2012, span = 5, dataset = "acs", table.name = "Poverty")
x <- acs.lookup(endyear = 2012, span = 5, dataset = "acs", table.name = "Poverty")
View(x)
str(x)
